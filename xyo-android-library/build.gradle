apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'

group = 'network.xyo'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        google()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jlleitschuh.gradle:ktlint-gradle:9.0.0"
    }
}

apply plugin: "org.jlleitschuh.gradle.ktlint"


Properties versionProps = new Properties()
def versionPropsFile = file('version.properties')

if (versionPropsFile.exists())
    versionProps.load(new FileInputStream(versionPropsFile))

def increment = 0

def runTasks = gradle.startParameter.taskNames

if (':xyo-android-library:assemble' in runTasks) {
    increment = 1
}

def majorVersion = 3
def minorVersion = 1
def patch = versionProps['VERSION_PATCH'].toInteger() + increment

def verString = majorVersion + '.' + minorVersion + '.' + patch

task printVersion {
    println verString
}

android {
    compileSdkVersion 31
    buildToolsVersion "30.0.3"
    ndkVersion "21.1.6352462"

    versionProps['VERSION_PATCH'] = patch.toString()
    versionProps.store(versionPropsFile.newWriter(), null)    

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        kotlinOptions {
            allWarningsAsErrors = false
        }
    }

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
    }

    lintOptions {
        htmlReport false
        abortOnError false
        warningsAsErrors false
        disable "HardwareIds", "MissingPermission"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/build.kotlin_module'
        exclude 'META-INF/atomicfu.kotlin_module'
    }

}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/xyo-android-library-release.aar")
            groupId 'network.xyo'
            artifactId 'sdk-xyo-android'
            version verString

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

ktlint {
    disabledRules = ["no-wildcard-imports"]
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.0"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2"
    implementation 'androidx.appcompat:appcompat:1.4.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    api 'com.github.xyoraclenetwork:sdk-ble-android:4.1.2'
    api 'com.github.xyoraclenetwork:sdk-core-kotlin:3.1.4'
    implementation 'com.snappydb:snappydb-lib:0.5.2'
    implementation 'org.bouncycastle:bcpkix-jdk15to18:1.70'
}